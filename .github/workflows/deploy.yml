name: Deploy Web Application

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ecommerce-website:latest

      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
          docker tag ${{ secrets.DOCKER_USERNAME }}/ecommerce-website:latest registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}

      - name: Deploy to Python Server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sshpass -p $SERVER_PASSWORD ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
          docker pull ${{ secrets.DOCKER_USERNAME }}/ecommerce-website:latest
          docker stop ecommerce-website || true
          docker rm ecommerce-website || true
          docker run -d -p 80:5000 --name ecommerce-website ${{ secrets.DOCKER_USERNAME }}/ecommerce-website:latest
          EOF
